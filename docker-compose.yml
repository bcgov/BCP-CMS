version: "3.4"

services:
  bcparks-api:
    container_name: bcparks-api
    build:
      context: src/api/BCParksApi
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    ports:
      - "5000:5000"
    restart: always
    networks:
      - bcp-cms-network

  react-frontend:
    container_name: bcp-frontend
    restart: unless-stopped
    build:
      context: src/frontend
      dockerfile: Dockerfile
    environment:
      REACT_APP_API_BASE_URL: ${REACT_APP_API_BASE_URL}
      REACT_APP_CMS_BASE_URL: ${REACT_APP_CMS_BASE_URL}
      REACT_APP_FRONTEND_BASE_URL: ${REACT_APP_FRONTEND_BASE_URL}
      PUBLIC_URL: ${PUBLIC_URL}
      REACT_APP_KEYCLOAK_AUTH_URL: ${REACT_APP_KEYCLOAK_AUTH_URL}
      REACT_APP_KEYCLOAK_REALM: ${REACT_APP_KEYCLOAK_REALM}
      REACT_APP_KEYCLOAK_CLIENT_ID: ${REACT_APP_KEYCLOAK_CLIENT_ID}
    networks:
      - bcp-cms-network
    ports:
      - "3000:3000"
    tty: true

  strapi:
    image: strapi/strapi:3.5.3
    container_name: bcp-strapi
    restart: unless-stopped
    env_file: .env
    build:
      context: src/backend
      dockerfile: Dockerfile
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_SSL: ${DATABASE_SSL}
      API_TOKEN: ${API_TOKEN}
      API_USER_NAME: ${API_USER_NAME}
      API_USER_EMAIL: ${API_USER_EMAIL}
      API_USER_PASSWORD: ${API_USER_PASSWORD}
    networks:
      - bcp-cms-network
    depends_on:
      - postgres
    ports:
      - "1337:1337"

  postgres:
    image: postgres:13.2
    restart: always
    container_name: bcp-db
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USERNAME: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    networks:
      - bcp-cms-network
    volumes:
      - local_postgres_data:/var/lib/postgresql/data

networks:
  bcp-cms-network:
    driver: bridge

volumes:
  local_postgres_data:
