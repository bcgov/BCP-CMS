name: Build Main Branch
on:
  push:
    branches: [main,tools]
  workflow_dispatch:
    branches: [main,tools]

jobs:
  build-admin:
    runs-on: ubuntu-20.04
    environment: Main
    steps:
      - name: Git Checkout
        uses: actions/checkout@v2

      - name: Login to RedHat
        uses: docker/login-action@v1
        with: 
          registry: ${{secrets.REDHAT_REPO}}
          username: ${{secrets.REDHAT_REPO_USER}}
          password: ${{secrets.REDHAT_REPO_AUTH}}

      - name: Login to OpenShift
        uses: docker/login-action@v1
        with:
          registry: ${{secrets.OPENSHIFT_EXTERNAL_REPOSITORY}}
          username: ${{secrets.OPENSHIFT_SA_USERNAME}}
          password: ${{secrets.OPENSHIFT_SA_PASSWORD}}

      - name: Build and push
        env:
          COMPOSE_DOCKER_CLI_BUILD: 1
          DOCKER_BUILDKIT: 1
          CONTEXT: ./src/admin
          IMAGE: ${{secrets.OPENSHIFT_EXTERNAL_REPOSITORY}}/${{secrets.OPENSHIFT_LICENSE_PLATE}}-tools/admin:${{secrets.OC_APP}} 
        run: |  
          docker build \
            --build-arg API_TOKEN=${{secrets.API_TOKEN}} \
            --build-arg ADMIN_JWT_SECRET=${{secrets.ADMIN_JWT_SECRET}} \
            --build-arg ASPNETCORE_ENVIRONMENT=${{secrets.ASPNETCORE_ENVIRONMENT}} \
            --build-arg REACT_APP_API_BASE_URL=${{secrets.REACT_APP_API_BASE_URL}} \
            --build-arg REACT_APP_CMS_BASE_URL=${{secrets.REACT_APP_CMS_BASE_URL}} \
            --build-arg REACT_APP_FRONTEND_BASE_URL=${{secrets.REACT_APP_FRONTEND_BASE_URL}} \
            --build-arg REACT_APP_KEYCLOAK_AUTH_URL=${{secrets.REACT_APP_KEYCLOAK_AUTH_URL}} \
            --build-arg REACT_APP_KEYCLOAK_REALM=${{secrets.REACT_APP_KEYCLOAK_REALM}} \
            --build-arg REACT_APP_KEYCLOAK_CLIENT_ID=${{secrets.REACT_APP_KEYCLOAK_CLIENT_ID}} \
             --tag $IMAGE \
            ${CONTEXT}
          docker push $IMAGE

  build-api:
    runs-on: ubuntu-20.04
    environment: Main
    steps:
      - name: Git Checkout
        uses: actions/checkout@v2

      - name: Login to RedHat
        uses: docker/login-action@v1
        with:
          registry: ${{secrets.REDHAT_REPO}}
          username: ${{secrets.REDHAT_REPO_USER}}
          password: ${{secrets.REDHAT_REPO_AUTH}}

      - name: Login to OpenShift
        uses: docker/login-action@v1
        with:
          registry: ${{secrets.OPENSHIFT_EXTERNAL_REPOSITORY}}
          username: ${{secrets.OPENSHIFT_SA_USERNAME}}
          password: ${{secrets.OPENSHIFT_SA_PASSWORD}}

      - name: Build and push
        env:
          COMPOSE_DOCKER_CLI_BUILD: 1
          DOCKER_BUILDKIT: 1
          CONTEXT: ./src/middleware
          IMAGE: ${{secrets.OPENSHIFT_EXTERNAL_REPOSITORY}}/${{secrets.OPENSHIFT_LICENSE_PLATE}}-tools/api:${{secrets.OC_APP}}
        run: |  
          docker build \
            --build-arg API_TOKEN=${{secrets.API_TOKEN}} \
            --build-arg ADMIN_JWT_SECRET=${{secrets.ADMIN_JWT_SECRET}} \
            --build-arg ASPNETCORE_ENVIRONMENT=${{secrets.ASPNETCORE_ENVIRONMENT}} \
            --build-arg REACT_APP_API_BASE_URL=${{secrets.REACT_APP_API_BASE_URL}} \
            --build-arg REACT_APP_CMS_BASE_URL=${{secrets.REACT_APP_CMS_BASE_URL}} \
            --build-arg REACT_APP_FRONTEND_BASE_URL=${{secrets.REACT_APP_FRONTEND_BASE_URL}} \
            --build-arg REACT_APP_KEYCLOAK_AUTH_URL=${{secrets.REACT_APP_KEYCLOAK_AUTH_URL}} \
            --build-arg REACT_APP_KEYCLOAK_REALM=${{secrets.REACT_APP_KEYCLOAK_REALM}} \
            --build-arg REACT_APP_KEYCLOAK_CLIENT_ID=${{secrets.REACT_APP_KEYCLOAK_CLIENT_ID}} \
            --tag $IMAGE \
            ${CONTEXT}
          docker push $IMAGE

 
  build-cms:
    runs-on: ubuntu-20.04
    environment: Main
    steps:
      - name: Git Checkout
        uses: actions/checkout@v2

      - name: Login to RedHat
        uses: docker/login-action@v1
        with:
          registry: ${{secrets.REDHAT_REPO}}
          username: ${{secrets.REDHAT_REPO_USER}}
          password: ${{secrets.REDHAT_REPO_AUTH}}

      - name: Login to OpenShift
        uses: docker/login-action@v1
        with:
          registry: ${{secrets.OPENSHIFT_EXTERNAL_REPOSITORY}}
          username: ${{secrets.OPENSHIFT_SA_USERNAME}}
          password: ${{secrets.OPENSHIFT_SA_PASSWORD}}

      - name: Build and push
        env:
          COMPOSE_DOCKER_CLI_BUILD: 1
          DOCKER_BUILDKIT: 1
          CONTEXT: ./src/cms
          IMAGE: ${{secrets.OPENSHIFT_EXTERNAL_REPOSITORY}}/${{secrets.OPENSHIFT_LICENSE_PLATE}}-tools/strapi:${{secrets.OC_APP}}
        run: |  
          docker build \
            --build-arg DATABASE_HOST=${{secrets.DATABASE_HOST}} \
            --build-arg DATABASE_PORT=${{secrets.DATABASE_PORT}} \
            --build-arg DATABASE_NAME=${{secrets.DATABASE_NAME}} \
            --build-arg DATABASE_USERNAME=${{secrets.DATABASE_USERNAME}} \
            --build-arg DATABASE_PASSWORD=${{secrets.DATABASE_PASSWORD}} \
            --build-arg DATABASE_SSL=${{secrets.DATABASE_SSL}} \
            --build-arg API_TOKEN=${{secrets.API_TOKEN}} \
            --build-arg API_USER_NAME=${{secrets.API_USER_NAME}} \
            --build-arg API_USER_EMAIL=${{secrets.API_USER_EMAIL}} \
            --build-arg API_USER_PASSWORD=${{secrets.API_USER_PASSWORD}} \
            --build-arg REACT_APP_CMS_BASE_URL=${{secrets.REACT_APP_CMS_BASE_URL}} \
            --tag $IMAGE \
            ${CONTEXT}
          docker push $IMAGE

  build-staging:
    runs-on: ubuntu-20.04
    environment: Main
    steps:
      - name: Git Checkout
        uses: actions/checkout@v2

      - name: Login to OpenShift
        uses: docker/login-action@v1
        with:
          registry: ${{secrets.OPENSHIFT_EXTERNAL_REPOSITORY}}
          username: ${{secrets.OPENSHIFT_SA_USERNAME}}
          password: ${{secrets.OPENSHIFT_SA_PASSWORD}}
    
      - name: Login to RedHat
        uses: docker/login-action@v1
        with:
          registry: ${{secrets.REDHAT_REPO}}
          username: ${{secrets.REDHAT_REPO_USER}}
          password: ${{secrets.REDHAT_REPO_AUTH}}

      - name: Build and push
        uses: docker/build-push-action@v2.4.0
        with:
          context: ./src/web
          push: true
          tags: ${{secrets.OPENSHIFT_EXTERNAL_REPOSITORY}}/${{secrets.OPENSHIFT_LICENSE_PLATE}}-tools/staging:${{secrets.OC_APP}}
